.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 100%;
  -webkit-text-size-adjust: none;
     -moz-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none;
  text-rendering: optimizelegibility;
  image-rendering: optimizequality;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: #fff;
}
body {
  padding: 0 24vw;
  margin: 0 auto 0;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  hanging-punctuation: first allow-end;
  color: #000;
  background: #fff;
  transition: all .2s ease;
}
@media (max-width: 1080px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
input,
button,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  -webkit-text-decoration-skip: ink;
          text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background: none;
  border: none;
  outline: none;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .2;
}
:-ms-input-placeholder {
  color: #000;
  opacity: .2;
}
::-ms-input-placeholder {
  color: #000;
  opacity: .2;
}
::placeholder {
  color: #000;
  opacity: .2;
}
:focus::-webkit-input-placeholder {
  color: #ff00b4;
}
:focus:-ms-input-placeholder {
  color: #ff00b4;
}
:focus::-ms-input-placeholder {
  color: #ff00b4;
}
:focus::placeholder {
  color: #ff00b4;
}
.js-system--apple {
  -webkit-font-feature-settings: "case", "ss01", "ss02";
          font-feature-settings: "case", "ss01", "ss02";
}
.navigation {
  padding-top: 1.6vmax;
  padding-bottom: 1.6vmax;
  margin-right: -1vmax;
  margin-left: -1vmax;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: 0.5em 1vmax;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff00b4;
  text-decoration: none;
}
.current a {
  color: #ff00b4;
}
body:hover .latest {
  color: #ff00b4 !important;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content a:has(>code) {
  -webkit-text-decoration-color: #00cc80;
          text-decoration-color: #00cc80;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
  word-wrap: break-word;
}
.content header {
  display: flex;
  min-height: calc(100vh - 6.4vmax - 5ex);
  padding-top: 10vmin;
  padding-bottom: 10vmin;
  margin-bottom: 16vmin;
  flex-direction: column;
  justify-content: center;
  background: rgba(0, 0, 0, 0.02);
  padding-left: 24vw;
  padding-right: 24vw;
  margin-left: -24vw;
  margin-right: -24vw;
}
@media (max-width: 1080px) {
  .content header {
    min-height: calc(50vh - 1.6vmax * 2 - 3ex);
    padding-top: 16vmin;
    padding-bottom: 16vmin;
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content header {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content header h1 {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  margin-left: -2px;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg,
.content header h1 img {
  display: block;
  max-width: 100%;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header h2 {
  margin: 1.2vmin 0 0;
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  list-style: none;
  counter-reset: list;
}
@media (max-width: 640px) {
  .content ul,
  .content ol {
    margin-left: 1em;
  }
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li:before,
.content ol li:before {
  position: absolute;
  display: inline-block;
  width: 4em;
  margin-top: 1px;
  margin-left: -4em;
  font-size: 80%;
  line-height: 2.14285714;
  text-align: right;
  opacity: .6;
  pointer-events: none;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-left: 1em;
  margin-bottom: 0;
}
.content ul li:before {
  content: "â€¢";
  padding-right: .6em;
}
.content ol li:before {
  counter-increment: list;
  content: counter(list) ".";
  padding-right: .3em;
}
.content dl {
  line-height: 1.71428571;
}
@media (max-width: 640px) {
  .content dl {
    margin-left: 1em;
  }
}
.content dl dt:before {
  position: absolute;
  width: 1em;
  margin-left: -1em;
  content: "-";
  opacity: .6;
  pointer-events: none;
}
.content dl dd {
  margin-bottom: 1.8rem;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (8vw * 2));
  margin: 0 -8vw 1.8rem;
}
@media (max-width: 1080px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-fit,
.content video.size-fit,
.content iframe.size-fit,
.content .browser.size-fit,
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  width: auto;
}
.content img.size-large,
.content video.size-large,
.content iframe.size-large,
.content .browser.size-large {
  width: calc(100% + (24vw * 2));
  margin-left: -24vw;
  margin-right: -24vw;
}
@media (max-width: 1080px) {
  .content img.size-large,
  .content video.size-large,
  .content iframe.size-large,
  .content .browser.size-large {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img.size-large,
  .content video.size-large,
  .content iframe.size-large,
  .content .browser.size-large {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-small,
.content video.size-small,
.content iframe.size-small,
.content .browser.size-small {
  width: calc(100% + (1.2vw * 2));
  margin-left: -1.2vw;
  margin-right: -1.2vw;
}
@media (max-width: 1080px) {
  .content img.size-small,
  .content video.size-small,
  .content iframe.size-small,
  .content .browser.size-small {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img.size-small,
  .content video.size-small,
  .content iframe.size-small,
  .content .browser.size-small {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-left,
.content video.size-left,
.content iframe.size-left,
.content .browser.size-left {
  float: left;
  max-width: 36vw;
  margin-top: 0.6vw;
  margin-right: 1.2vw;
  margin-bottom: 0.6vw;
}
@media (max-width: 1080px) {
  .content img.size-left,
  .content video.size-left,
  .content iframe.size-left,
  .content .browser.size-left {
    float: none;
    max-width: none;
    margin-top: auto;
    margin-right: auto;
    margin-bottom: auto;
  }
}
.content img.size-right,
.content video.size-right,
.content iframe.size-right,
.content .browser.size-right {
  float: right;
  max-width: 36vw;
  margin-top: 0.6vw;
  margin-left: 1.2vw;
  margin-bottom: 0.6vw;
}
@media (max-width: 1080px) {
  .content img.size-right,
  .content video.size-right,
  .content iframe.size-right,
  .content .browser.size-right {
    float: none;
    max-width: none;
    margin-top: auto;
    margin-left: auto;
    margin-bottom: auto;
  }
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: -1.2vw;
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
  opacity: .6;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content pre,
.content code {
  font-family: Menlo, Consolas, monospace;
  color: #00cc80;
}
.content pre {
  background: rgba(0, 136, 255, 0.04);
}
.content code {
  font-size: 92%;
  overflow-wrap: break-word;
}
.content pre,
.content .highlight > pre,
.content .highlighter-rouge pre.highlight {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1080px) {
  .content pre,
  .content .highlight > pre,
  .content .highlighter-rouge pre.highlight {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre,
  .content .highlight > pre,
  .content .highlighter-rouge pre.highlight {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content pre code,
.content .highlight > pre code,
.content .highlighter-rouge pre.highlight code {
  overflow-wrap: normal;
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 0, 180, 0.05);
  border-color: #ff00b4;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  display: inline-block;
  overflow-x: auto;
  white-space: nowrap;
}
@media (max-width: 1080px) {
  .content table {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content table {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th:first-child,
.content table td:first-child {
  padding-left: 1.2vw;
}
.content table th:last-child,
.content table td:last-child {
  padding-right: 1.2vw;
}
@media (max-width: 1080px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 8vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 8vw;
  }
}
@media (max-width: 640px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 4vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 4vw;
  }
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
:lang(zh) ruby rt,
:lang(ja) ruby rt {
  text-align: start;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1080px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  max-width: 100%;
  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1080px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: -1.2vw;
  border-left: 2px solid #ff00b4;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #ff00b4;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: -webkit-transform .4s ease;
  transition: transform .4s ease;
  transition: transform .4s ease, -webkit-transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  -webkit-transform: scale(1.4);
          transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 1vmax;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, Consolas, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content header {
    min-height: 0;
    padding-bottom: 0;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
.highlight > pre,
.highlighter-rouge pre.highlight {
  background: rgba(77, 0, 54, 0.02);
}
.highlight code,
.highlighter-rouge code {
  color: #867982;
}
.highlight .err,
.highlighter-rouge .err {
  background-color: rgba(255, 0, 180, 0.1);
}
.highlight .c,
.highlighter-rouge .c {
  font-style: italic;
}
.highlight .cm,
.highlighter-rouge .cm {
  font-style: italic;
}
.highlight .cp,
.highlighter-rouge .cp {
  font-weight: bold;
}
.highlight .c1,
.highlighter-rouge .c1 {
  font-style: italic;
}
.highlight .cs,
.highlighter-rouge .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc,
.highlighter-rouge .nc {
  font-weight: bold;
}
.highlight .ne,
.highlighter-rouge .ne {
  font-weight: bold;
}
.highlight .nf,
.highlighter-rouge .nf {
  font-weight: bold;
}
.highlight .o,
.highlighter-rouge .o {
  font-weight: bold;
}
.highlight .ow,
.highlighter-rouge .ow {
  font-weight: bold;
}
.highlight .gs,
.highlighter-rouge .gs {
  font-weight: bold;
}
.highlight .ge,
.highlighter-rouge .ge {
  font-style: italic;
}
.highlight .k,
.highlighter-rouge .k {
  font-weight: bold;
}
.highlight .kt,
.highlighter-rouge .kt {
  font-weight: bold;
}
.highlight .kc,
.highlighter-rouge .kc {
  font-weight: bold;
}
.highlight .kd,
.highlighter-rouge .kd {
  font-weight: bold;
}
.highlight .kp,
.highlighter-rouge .kp {
  font-weight: bold;
}
.highlight .kr,
.highlighter-rouge .kr {
  font-weight: bold;
}
.highlight .err,
.highlighter-rouge .err {
  color: #33a399;
}
.highlight .x,
.highlighter-rouge .x {
  color: #33a3a8;
}
.highlight .n,
.highlighter-rouge .n {
  color: #33a3b6;
}
.highlight .na,
.highlighter-rouge .na {
  color: #33a3c5;
}
.highlight .nb,
.highlighter-rouge .nb {
  color: #3397c7;
}
.highlight .bp,
.highlighter-rouge .bp {
  color: #3388c7;
}
.highlight .nc,
.highlighter-rouge .nc {
  color: #337ac7;
}
.highlight .no,
.highlighter-rouge .no {
  color: #336bc7;
}
.highlight .nd,
.highlighter-rouge .nd {
  color: #335cc7;
}
.highlight .ni,
.highlighter-rouge .ni {
  color: #334ec7;
}
.highlight .ne,
.highlighter-rouge .ne {
  color: #333fc7;
}
.highlight .nf,
.highlighter-rouge .nf {
  color: #3331c7;
}
.highlight .nl,
.highlighter-rouge .nl {
  color: #3322c7;
}
.highlight .nn,
.highlighter-rouge .nn {
  color: #3313c7;
}
.highlight .nx,
.highlighter-rouge .nx {
  color: #3305c7;
}
.highlight .nt,
.highlighter-rouge .nt {
  color: #3d00c7;
}
.highlight .nv,
.highlighter-rouge .nv {
  color: #4b00c7;
}
.highlight .vc,
.highlighter-rouge .vc {
  color: #5a00c7;
}
.highlight .vg,
.highlighter-rouge .vg {
  color: #6900c7;
}
.highlight .vi,
.highlighter-rouge .vi {
  color: #7700c7;
}
.highlight .g,
.highlighter-rouge .g {
  color: #8600c7;
}
.highlight .gd,
.highlighter-rouge .gd {
  color: #9500c7;
}
.highlight .ge,
.highlighter-rouge .ge {
  color: #a300c7;
}
.highlight .gr,
.highlighter-rouge .gr {
  color: #b200c7;
}
.highlight .gh,
.highlighter-rouge .gh {
  color: #c000c7;
}
.highlight .gi,
.highlighter-rouge .gi {
  color: #cf00c7;
}
.highlight .go,
.highlighter-rouge .go {
  color: #d600c0;
}
.highlight .gp,
.highlighter-rouge .gp {
  color: #d600b1;
}
.highlight .gs,
.highlighter-rouge .gs {
  color: #d600a3;
}
.highlight .gu,
.highlighter-rouge .gu {
  color: #d60094;
}
.highlight .gt,
.highlighter-rouge .gt {
  color: #d60085;
}
.highlight .gl,
.highlighter-rouge .gl {
  color: #d60077;
}
.highlight .k,
.highlighter-rouge .k {
  color: #d60068;
}
.highlight .kc,
.highlighter-rouge .kc {
  color: #d60059;
}
.highlight .kd,
.highlighter-rouge .kd {
  color: #d6004b;
}
.highlight .kn,
.highlighter-rouge .kn {
  color: #d6003c;
}
.highlight .kp,
.highlighter-rouge .kp {
  color: #d6002e;
}
.highlight .kr,
.highlighter-rouge .kr {
  color: #d60524;
}
.highlight .kt,
.highlighter-rouge .kt {
  color: #d61424;
}
.highlight .kv,
.highlighter-rouge .kv {
  color: #d62224;
}
.highlight .w,
.highlighter-rouge .w {
  color: #d63124;
}
.highlight .l,
.highlighter-rouge .l {
  color: #d63f24;
}
.highlight .ld,
.highlighter-rouge .ld {
  color: #d64e24;
}
.highlight .s,
.highlighter-rouge .s {
  color: #d65d24;
}
.highlight .sb,
.highlighter-rouge .sb {
  color: #d66b24;
}
.highlight .sc,
.highlighter-rouge .sc {
  color: #d67a24;
}
.highlight .sd,
.highlighter-rouge .sd {
  color: #d68924;
}
.highlight .s2,
.highlighter-rouge .s2 {
  color: #d69724;
}
.highlight .se,
.highlighter-rouge .se {
  color: #d4a324;
}
.highlight .sh,
.highlighter-rouge .sh {
  color: #c5a324;
}
.highlight .si,
.highlighter-rouge .si {
  color: #b6a324;
}
.highlight .sx,
.highlighter-rouge .sx {
  color: #a8a324;
}
.highlight .sr,
.highlighter-rouge .sr {
  color: #99a324;
}
.highlight .s1,
.highlighter-rouge .s1 {
  color: #8ba324;
}
.highlight .ss,
.highlighter-rouge .ss {
  color: #7ca324;
}
.highlight .m,
.highlighter-rouge .m {
  color: #6da324;
}
.highlight .mf,
.highlighter-rouge .mf {
  color: #5fa324;
}
.highlight .mh,
.highlighter-rouge .mh {
  color: #50a324;
}
.highlight .mi,
.highlighter-rouge .mi {
  color: #42a324;
}
.highlight .il,
.highlighter-rouge .il {
  color: #33a324;
}
.highlight .mo,
.highlighter-rouge .mo {
  color: #33a333;
}
.highlight .mb,
.highlighter-rouge .mb {
  color: #33a341;
}
.highlight .mx,
.highlighter-rouge .mx {
  color: #33a350;
}
.highlight .o,
.highlighter-rouge .o {
  color: #33a35f;
}
.highlight .ow,
.highlighter-rouge .ow {
  color: #33a36d;
}
.highlight .p,
.highlighter-rouge .p {
  color: #33a37c;
}
.highlight .pi,
.highlighter-rouge .pi {
  color: #33a38a;
}
.highlight .c,
.highlighter-rouge .c {
  color: #5a5589;
  opacity: .6;
}
.highlight .cd,
.highlighter-rouge .cd {
  color: #7c4089;
  opacity: .6;
}
.highlight .cm,
.highlighter-rouge .cm {
  color: #914067;
  opacity: .6;
}
.highlight .cp,
.highlighter-rouge .cp {
  color: #916352;
  opacity: .6;
}
.highlight .c1,
.highlighter-rouge .c1 {
  color: #6e7752;
  opacity: .6;
}
.highlight .cs,
.highlighter-rouge .cs {
  color: #5a7775;
  opacity: .6;
}
.highlight table,
.highlighter-rouge table,
.highlight table th,
.highlighter-rouge table th,
.highlight table td,
.highlighter-rouge table td,
.highlight table td pre,
.highlighter-rouge table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table pre,
.highlighter-rouge table pre {
  overflow-x: visible;
}
.highlight table .gutter:first-child,
.highlighter-rouge table .gutter:first-child,
.highlight table .gutter:last-child,
.highlighter-rouge table .gutter:last-child {
  padding: 0 !important;
}
.highlight table .gutter .lineno,
.highlighter-rouge table .gutter .lineno {
  color: #867982;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code,
.highlighter-rouge table .code {
  padding-left: 1em;
}
.content .sub-title {
  font-size: 108%;
  opacity: .8;
}
/*# sourceMappingURL=data:application/json;base64, */